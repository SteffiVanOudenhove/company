{
	"info": {
		"_postman_id": "83478b04-f732-4375-83b8-b7a7d29144f0",
		"name": "BigCo Company tests (FORMS+JSON format)",
		"description": "Company test suite for Company API. Expectes FORMS+JSON responses",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "company home",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3afbe6c6-c374-467c-b301-7caf744eb124",
						"type": "text/javascript",
						"exec": [
							"/***********************",
							" * FORMS+JSON TESTS",
							" ***********************/",
							"",
							"// shared vars for this script ",
							"var body = pm.response.json();",
							"var obj = 'home';",
							"",
							"// 200 OK",
							"checkStatus(200);",
							"",
							"// HEADERS",
							"checkHeader('content-type','application/forms+json');",
							"",
							"// METADATA",
							"checkMeta('title', 'BigCo Company Records');",
							"checkMeta('release', '1.0.0');",
							"checkMeta('author', 'Amundsen');",
							"",
							"// LINKS",
							"checkLink('home');",
							"checkLink('self');",
							"checkLink('list');",
							"",
							"// ITEMS",
							"/* none for this request */",
							"",
							"// SHARED CODE",
							"",
							"// check status",
							"function checkStatus(value) {",
							"    pm.test('Status is '+value, function() {",
							"       pm.expect(pm.response.code).to.equal(value); ",
							"    });",
							"}",
							"",
							"// check header",
							"function checkHeader(name, value) {",
							"    pm.test('Header ' + name + ' contains ' +value, function() {",
							"        var hdr = pm.response.headers.get(name);",
							"        pm.expect(hdr.indexOf(value)).to.not.equal(-1);",
							"    });",
							"}",
							"",
							"// metadata testing",
							"function checkMeta(name, value) {",
							"    pm.test(name+ ' contains '+value, function() {",
							"       var meta = body[obj].metadata.find( x => x.name === name);",
							"       pm.expect(meta.value.indexOf(value)).to.not.equal(-1);",
							"    });",
							"}",
							"",
							"// link testing",
							"function checkLink(id) {",
							"    pm.test('Valid '+id+' link', function() {",
							"        var body = pm.response.json();",
							"        var link = body[obj].links.find(x => x.id === id);",
							"        pm.expect(link.id).to.equal(id);",
							"        pm.expect(link.href).to.be.a('string');",
							"    });",
							"}",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/forms+json"
					}
				],
				"body": {},
				"url": {
					"raw": "{{server}}/",
					"host": [
						"{{server}}"
					],
					"path": [
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "company list",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9b9d0fdd-cf32-4730-8747-834c56e598d5",
						"type": "text/javascript",
						"exec": [
							"/***********************",
							" * HOME LINK TESTS",
							" ***********************/",
							"",
							"// shared vars for this script ",
							"var body = pm.response.json();",
							"var obj = 'company';",
							"",
							"// 200 OK",
							"checkStatus(200);",
							"",
							"/*",
							"pm.test('200 OK response', function() {",
							"   pm.expect(pm.response.code).to.equal(200); ",
							"});",
							"*/",
							"",
							"// HEADERS",
							"checkHeader('content-type','application/forms+json');",
							"",
							"// METADATA",
							"checkMeta('title', 'BigCo Company Records');",
							"checkMeta('release', '1.0.0');",
							"checkMeta('author', 'Amundsen');",
							"",
							"// LINKS",
							"checkLink('home');",
							"checkLink('self');",
							"checkLink('list');",
							"",
							"// ITEMS",
							"/* none for this request */",
							"",
							"// SHARED CODE",
							"",
							"// check status",
							"function checkStatus(value) {",
							"    pm.test('Status is '+value, function() {",
							"       pm.expect(pm.response.code).to.equal(value); ",
							"    });",
							"}",
							"",
							"// check header",
							"function checkHeader(name, value) {",
							"    pm.test('Header ' + name + ' contains ' +value, function() {",
							"        var hdr = pm.response.headers.get(name);",
							"        pm.expect(hdr.indexOf(value)).to.not.equal(-1);",
							"    });",
							"}",
							"",
							"// metadata testing",
							"function checkMeta(name, value) {",
							"    pm.test(name+ ' contains '+value, function() {",
							"       var meta = body[obj].metadata.find( x => x.name === name);",
							"       pm.expect(meta.value.indexOf(value)).to.not.equal(-1);",
							"    });",
							"}",
							"",
							"// link testing",
							"function checkLink(id) {",
							"    pm.test('Valid '+id+' link', function() {",
							"        var body = pm.response.json();",
							"        var link = body[obj].links.find(x => x.id === id);",
							"        pm.expect(link.id).to.equal(id);",
							"        pm.expect(link.href).to.be.a('string');",
							"    });",
							"}",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/forms+json"
					}
				],
				"body": {},
				"url": {
					"raw": "{{server}}/list/",
					"host": [
						"{{server}}"
					],
					"path": [
						"list",
						""
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "99278e70-6024-4792-89f2-67606c887db8",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "4ff83442-3a8a-473e-8627-1e0012751c4e",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}